@using MVCDemo1.Models
@model MVCDemo1.Models.Employee

@{
    MyContextClass myContextClass = new MyContextClass();

    List<Department> departments = myContextClass.Departments.Where(dep =>dep.ID != Model.ID).ToList();
    //the where statement doesn't work

}

@{
    ViewBag.Title = "Edit";
}
@*
    <script type="text/javascript" language="javascript">
        function MouseOver(BID) {
            var MyButton = document.getElementById(BID);
            MyButton.style.backgroundColor = "red";
        }
        function MouseOut(BID) {
            var MyButton = document.getElementById(BID);
            MyButton.style.backgroundColor = "Blue";
        }
    </script>*@
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password("Password", Model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password("ConfirmPassword", Model.Password ,new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Gender, new[] {


               new SelectListItem {Text="Male",Value="Male" },
               new SelectListItem {Text="Female",Value="Female" }

           }
           , "Select Gender")
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (Department dep in myContextClass.Departments)
                {

                    @Html.RadioButtonFor(x => x.DepartmentID, dep.ID,
       dep.ID == Model.DepartmentID ? new { @checked = "checked" } : null


       )@dep.Name
                    <br />
                }
               
                
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>

    

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @* id="Editbutton" onmouseout="MouseOut(Editbutton)" onmouseover="MouseOver(Editbutton)"*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllEmployees")
</div>

<br />

<div>
    <select name="DepartmentID">
        <option value="@Model.DepartmentID">@Department.ReturnDepName(Model.DepartmentID)</option>
        @foreach (Department dep in departments)
        {
            <option value="@dep.ID"> @dep.Name</option>
        }

    </select>

    </div>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
